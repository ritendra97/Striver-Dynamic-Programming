public class Main {

    public static boolean helper(int ind, int set[], int n, int sum){

        if(sum==0) return true;
        if(ind==0) return set[0]==sum;

        boolean nonTake = helper(ind-1, set,n,sum);
        boolean take = false;
        if(set[ind-1]<=sum){
            take = helper(ind-1, set,n,sum-set[ind-1]);
        }
        return take || nonTake;
    }

    public static boolean isSubsetSum(int set[], int n, int sum) {
        return helper(n,set,n,sum);
    }

    public static void main(String[] args) {
        int set[] = { 3, 34, 4, 12, 5, 2 };
        int sum = 9;
        int n = set.length;
        if (isSubsetSum(set, n, sum) == true)
            System.out.println("Found a subset" + " with given sum");
        else
            System.out.println("No subset with" + " given sum");
    }
}


import java.util.*;

class TUF {
   
    static boolean subsetSumToK(int n, int k, int[] arr) {
      
        boolean dp[][] = new boolean[n][k + 1];
        
        for (int i = 0; i < n; i++) {
            dp[i][0] = true;
        }

        if (arr[0] <= k) {
            dp[0][arr[0]] = true;
        }

        for (int ind = 1; ind < n; ind++) {
            for (int target = 1; target <= k; target++) {
               
                boolean notTaken = dp[ind - 1][target];
                
                // Calculate if the current target can be achieved by taking the current element
                boolean taken = false;
                if (arr[ind] <= target) {
                    taken = dp[ind - 1][target - arr[ind]];
                }
                
                // Store the result in the DP table
                dp[ind][target] = notTaken || taken;
            }
        }

        // The final result is stored in the bottom-right cell of the DP table
        return dp[n - 1][k];
    }

    public static void main(String args[]) {
        int arr[] = { 1, 2, 3, 4 };
        int k = 4;
        int n = arr.length;

        // Check if there exists a subset with the given target sum
        if (subsetSumToK(n, k, arr))
            System.out.println("Subset with the given target found");
        else
            System.out.println("Subset with the given target not found");
    }
}
